}
if(dim(Reales[[1]])==dim(Simulados[[1]])){
print("hola")
}
dim(Reales[[1]])
dim(Reales[1])
dim(Reales[2])
dim(Reales)
a <- dim(Reales)
b <- dim(Simulados)
a
b
if(a == b){
print("hola")
}
Sxy <- sum(xi*yi) - lon * x_ * y_
Sxx <- sum(xi^2) - 6 * x_^2
b <- Sxy/Sxx
b
Yi <- y_ + b*(xi - x_)
Yi
S2yx = (sum((xi - Yi)^2))/lon
S2yx
(sum((xi*(b-1))^2))
fisher <- ((lon*(y_^2)) + (2*y_)*(b - 1)*(sum((xi*(b-1))^2))*(sum(xi^2)))/(2*S2yx)
fisher
xi <- Reales$datos.CBM
yi <- Simulados$datos.CBMs
x_ <- mean(xi)
y_ <- mean(yi)
Sxy <- sum(xi*yi) - lon * x_ * y_
Sxx <- sum(xi^2) - 6 * x_^2
b <- Sxy/Sxx
b
Yi <- y_ + b*(xi - x_)
Yi
S2yx = (sum((xi - Yi)^2))/lon
S2yx
(sum((xi*(b-1))^2))
fisher <- ((lon*(y_^2)) + (2*y_)*(b - 1)*(sum((xi*(b-1))^2))*(sum(xi^2)))/(2*S2yx)
fisher
library(DIMBIO)
Univariantes(Reales, Simulados)
Univariantes(Reales, Simulados)
library(DIMBIO)
dim(logReales)[2]
library(DIMBIO)
dim(logReales)[2]
Univariantes(Reales, Simulados)
dim(logReales)[1]
msep <- (sum((Reales$datos.NBM - Simulados$datos.NBMs)^2))/120
mesp
msep
library(DIMBIO)
Univariantes(Reales, Simulados)
library(DIMBIO)
Univariantes(Reales, Simulados)
table_uni <- data.frame(matrix(ve,nrow=4,ncol=11,byrow=T))
library(DIMBIO)
library(DIMBIO)
Univariantes(Reales, Simulados)
Univariantes(Reales, Simulados)
library(DIMBIO)
Univariantes(Reales, Simulados)
library(DIMBIO)
Univariantes(Reales, Simulados)
library(DIMBIO)
Univariantes(Reales, Simulados)
msep <- (sum((Reales$datos.NBM - Simulados$datos.NBMs)^2))/120
############## RMSEP ########################################################
rmsep <- sqrt(msep)
msep
rmsep
library(DIMBIO)
library(DIMBIO)
Univariantes(Reales, Simulados)
abs(-2)
mae <- sum(Reales$datos.CBM - Simulados.CBMs)
mae <- sum(Reales$datos.CBM - Simulados$datos.CBMs
############################ NS #############################################
ns <- 1 - (sum((Reales$datos.CBM-Simulados$datos.CBMs)^2)/sum((Reales$datos.CBM-mean(Reales$datos.CBM))^2))
############################ U #############################################
U <- sqrt(sum((Reales$datos.CBM-Simulados$datos.CBMs)^2)/lon) / (sqrt(sum((Reales$datos.CBM)^2)/lon) + sqrt(sum((Simulados$datos.CBMs)^2)/lon))
############################ MV #############################################
MV <- (lon / 2) * (log1p(sum((Reales$datos.CBM-Simulados$datos.CBMs)^2)/lon))
############################ AIC #############################################
AIC <- (-2 * MV)+2
############################ Bayes  al final#############################################
#bayes <- mv / 2015#
############################ MC  #############################################
MC <- ((mean(Reales$datos.CBM)-mean(Simulados$datos.CBMs))^2)/(sum((Reales$datos.CBM-Simulados$datos.CBMs)^2)/lon)
############################ SC  #############################################
SC <- ((sd(Simulados$datos.CBMs)-(cor_pearson*sd(Reales$datos.CBM)))^2)/(sum((Reales$datos.CBM-Simulados$datos.CBMs)^2)/lon)
############################ RC  #############################################
RC <- ((1 - (cor_pearson)^2)*((var(Reales$datos.CBM))*((lon-1)/lon)))/(sum((Reales$datos.CBM-Simulados$datos.CBMs)^2)/lon)
############################ t student para datos parados  ###################
d_ <- (sum(Reales$datos.CBM - Simulados$datos.CBMs)/120)
t_student <- d_/sqrt((sum(((Reales$datos.CBM-Simulados$datos.CBMs)-d_)^2))/119);
###################################### test F  ###############################
#a <- c(0, 5, 10, 15, 20, 25)
#b <- c(14.6, 24.5, 21.8, 34.5, 35.1, 43)
#x_ <- mean(a)
#x_
#y_ <- mean(b)
#y_
# Sxy sum(xy) - n * x_ * y_
# Sxx
#Sxy <- sum(a*b) - 6 * x_ * y_
#Sxy
#Sxx <- sum(a^2) - 6 * x_^2
#Sxx
#b <- Sxy/Sxx
#b
#a_x_ <- (a - x_)
#a_x_
#yi <- y_ + b*a_x_
#yi
#S2yx = (sum((a - yi)^2))/4
#S2yx
#fisher <- (6*y_^2 + (2*y_)*(b-1))
#fisher
#b
#lon <- as.numeric(length(Reales[[1]]))
xi <- Reales$datos.CBM
yi <- Simulados$datos.CBMs
x_ <- mean(xi)
y_ <- mean(yi)
Sxy <- sum(xi*yi) - lon * x_ * y_
Sxx <- sum(xi^2) - 6 * x_^2
b <- Sxy/Sxx
b
Yi <- y_ + b*(xi - x_)
Yi
S2yx = (sum((xi - Yi)^2))/lon
S2yx
(sum((xi*(b-1))^2))
fisher <- ((lon*(y_^2)) + (2*y_)*(b - 1)*(sum((xi*(b-1))^2))*(sum(xi^2)))/(2*S2yx)
fisher
################################### Funciones Univariantes ###########################
for (i in 1:dim(logReales)[2]) {
if(i==1){
ve <- sqrt(sum((Reales[[i]]-Simulados[[i]])^2)/lon)*100/mean(Reales[[i]]) #%RMSE
ve <- cbind(ve,1 - (sum((Reales[[i]]-Simulados[[i]])^2)/sum((Reales[[i]]-mean(Reales[[i]]))^2)))#NS
ve <- cbind(ve, msep <- (sum((Reales[[i]]-Simulados[[i]])^2))/lon) #MSEP
ve <- cbind(ve, sqrt(msep)) #RMSEP
ve <- cbind(ve, sqrt(sum((Reales[[i]]-Simulados[[i]])^2)/lon) / (sqrt(sum((Reales[[i]])^2)/lon) + sqrt(sum((Simulados[[i]])^2)/lon)))#U
ve <- cbind(ve,(cor(Reales[[i]], Simulados[[i]]))^2);   #r^2
ve <- cbind(ve, pearson <- cor(Reales[[i]], Simulados[[i]])) #pearson
ve <- cbind(ve,MV <- (lon / 2) * (log1p(sum((Reales[[i]]-Simulados[[i]])^2)/lon))) # MV
ve <- cbind(ve, (-2 * MV)+2)#AIC
ve <- cbind(ve,((mean(Reales[[i]])-mean(Simulados[[i]]))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#MC
ve <- cbind(ve,((sd(Simulados[[i]])-(pearson*sd(Reales[[i]])))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#SC
ve <- cbind(ve,((1 - (pearson)^2)*((var(Reales[[i]]))*((lon-1)/lon)))/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#RC
d_ <- (sum(Reales$datos.CBM - Simulados$datos.CBMs)/lon)
ve <- cbind(ve, d_/sqrt((sum(((Reales$datos.CBM-Simulados$datos.CBMs)-d_)^2))/(lon-1))) # t_student
}
else{
ve <- cbind(ve, sqrt(sum((Reales[[i]]-Simulados[[i]])^2)/lon)*100/mean(Reales[[i]]))#%RMSE
ve <- cbind(ve,1 - (sum((Reales[[i]]-Simulados[[i]])^2)/sum((Reales[[i]]-mean(Reales[[i]]))^2)))#NS
ve <- cbind(ve, msep <- (sum((Reales[[i]]-Simulados[[i]])^2))/lon) #MSEP
ve <- cbind(ve, sqrt(msep)) #RMSEP
ve <- cbind(ve, sqrt(sum((Reales[[i]]-Simulados[[i]])^2)/lon) / (sqrt(sum((Reales[[i]])^2)/lon) + sqrt(sum((Simulados[[i]])^2)/lon)))#U
ve <- cbind(ve, ((cor(Reales[[i]], Simulados[[i]]))^2))#r^2
ve <- cbind(ve, pearson <- cor(Reales[[i]], Simulados[[i]])) #pearson
ve <- cbind(ve,MV <- (lon / 2) * (log1p(sum((Reales[[i]]-Simulados[[i]])^2)/lon))) # MV
ve <- cbind(ve, (-2 * MV)+2)#AIC
ve <- cbind(ve,((mean(Reales[[i]])-mean(Simulados[[i]]))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#MC
ve <- cbind(ve,((sd(Simulados[[i]])-(pearson*sd(Reales[[i]])))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#SC
ve <- cbind(ve,((1 - (pearson)^2)*((var(Reales[[i]]))*((lon-1)/lon)))/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#RC
d_ <- (sum(Reales[[i]] - Simulados[[i]])/lon)
ve <- cbind(ve, d_/sqrt((sum(((Reales[[i]]-Simulados[[i]])-d_)^2))/(lon-1))) # t_student
}
}
table_uni <- data.frame(matrix(ve,nrow=dim(logReales)[2],ncol=13,byrow=T))
colnames(table_uni ) <- c("%RMSE", "NS","MSEP","RMSEP","U","R^2","pearson","MV","AIC","MC","SC","RC","t-student")
table_uni$bayes <-(table_uni$MV/sum(table_uni$MV))
return(table_uni)
}
mae <- sum(Reales$datos.CBM - Simulados$datos.CBMs)
mae
mae <- sum(abs(Reales$datos.CBM - Simulados$datos.CBMs))
mae
mae <- (sum(abs(Reales$datos.CBM - Simulados$datos.CBMs)))lon
mae <- (sum(abs(Reales$datos.CBM - Simulados$datos.CBMs)))/lon
mae
library(DIMBIO)
Univariantes(Reales,Simulados)
mae <- (sum(abs(Reales$datos.CBM - Simulados$datos.CBMs)))/lon
mae
mae <- (sum(abs(Reales$datos.CBM - Simulados$datos.CBMs)))/120
mae
por_mae <- (sum((Reales$datos.CBM - Simulados$datos.CBMs)/Reales$datos.CBM))*(100/120)
por_mae
por_mae <- (sum((Reales$datos.CBM - Simulados$datos.CBMs)/Reales$datos.CBM))
por_mae
por_mae <- abs(Reales$datos.CBM-Simulados$datos.CBMs)
por_mae
por_mae <- (abs(Reales$datos.CBM-Simulados$datos.CBMs))/(abs(Reales$datos.CBM))
por_mae
Reales$datos.CBM
View(restaRealeslog)
View(restaRealeslog)
View(Reales)
por_mae <- (abs(Reales$datos.CBM-Simulados$datos.CBMs))/(abs(Reales$datos.CBM))
por_mae
por_mae <- (sum((abs(Reales$datos.CBM-Simulados$datos.CBMs))/(abs(Reales$datos.CBM))))
por_mae
por_mae <- (sum((abs(Reales$datos.CBM-Simulados$datos.CBMs))/(abs(Reales$datos.CBM))))*(100/120)
por_mae
Univariantes <- function(Reales, Simulados){
lon <- as.numeric(length(Reales[[1]]))
n_variable <- as.numeric(length(Reales))
##############Coeficiente de correlacion lineal R^2#########################
rcuadrado <- (cor(Reales$datos.CBM, Simulados$datos.CBMs))^2
##############Coeficiente de correlacion de pearson#########################
cor_pearson <- cor(Reales$datos.CBM, Simulados$datos.CBMs)
##############% RSME ########################################################
rsme <- sqrt(sum((Reales$datos.CBM-Simulados$datos.CBMs)^2)/lon)*100/mean(Reales$datos.CBM)
############## MSEP ########################################################
msep <- (sum((Reales$datos.NBM - Simulados$datos.NBMs)^2))/120
############## RMSEP ########################################################
rmsep <- sqrt(msep)
############## MAE ########################################################
mae <- (sum(abs(Reales$datos.CBM - Simulados$datos.CBMs)))/120
############## %MAE ########################################################
por_mae <- (sum((abs(Reales$datos.CBM-Simulados$datos.CBMs))/(abs(Reales$datos.CBM))))*(100/120)
############################ NS #############################################
ns <- 1 - (sum((Reales$datos.CBM-Simulados$datos.CBMs)^2)/sum((Reales$datos.CBM-mean(Reales$datos.CBM))^2))
############################ U #############################################
U <- sqrt(sum((Reales$datos.CBM-Simulados$datos.CBMs)^2)/lon) / (sqrt(sum((Reales$datos.CBM)^2)/lon) + sqrt(sum((Simulados$datos.CBMs)^2)/lon))
############################ MV #############################################
MV <- (lon / 2) * (log1p(sum((Reales$datos.CBM-Simulados$datos.CBMs)^2)/lon))
############################ AIC #############################################
AIC <- (-2 * MV)+2
############################ Bayes  al final#############################################
#bayes <- mv / 2015#
############################ MC  #############################################
MC <- ((mean(Reales$datos.CBM)-mean(Simulados$datos.CBMs))^2)/(sum((Reales$datos.CBM-Simulados$datos.CBMs)^2)/lon)
############################ SC  #############################################
SC <- ((sd(Simulados$datos.CBMs)-(cor_pearson*sd(Reales$datos.CBM)))^2)/(sum((Reales$datos.CBM-Simulados$datos.CBMs)^2)/lon)
############################ RC  #############################################
RC <- ((1 - (cor_pearson)^2)*((var(Reales$datos.CBM))*((lon-1)/lon)))/(sum((Reales$datos.CBM-Simulados$datos.CBMs)^2)/lon)
############################ t student para datos parados  ###################
d_ <- (sum(Reales$datos.CBM - Simulados$datos.CBMs)/120)
t_student <- d_/sqrt((sum(((Reales$datos.CBM-Simulados$datos.CBMs)-d_)^2))/119);
###################################### test F  ###############################
#a <- c(0, 5, 10, 15, 20, 25)
#b <- c(14.6, 24.5, 21.8, 34.5, 35.1, 43)
#x_ <- mean(a)
#x_
#y_ <- mean(b)
#y_
# Sxy sum(xy) - n * x_ * y_
# Sxx
#Sxy <- sum(a*b) - 6 * x_ * y_
#Sxy
#Sxx <- sum(a^2) - 6 * x_^2
#Sxx
#b <- Sxy/Sxx
#b
#a_x_ <- (a - x_)
#a_x_
#yi <- y_ + b*a_x_
#yi
#S2yx = (sum((a - yi)^2))/4
#S2yx
#fisher <- (6*y_^2 + (2*y_)*(b-1))
#fisher
#b
#lon <- as.numeric(length(Reales[[1]]))
xi <- Reales$datos.CBM
yi <- Simulados$datos.CBMs
x_ <- mean(xi)
y_ <- mean(yi)
Sxy <- sum(xi*yi) - lon * x_ * y_
Sxx <- sum(xi^2) - 6 * x_^2
b <- Sxy/Sxx
b
Yi <- y_ + b*(xi - x_)
Yi
S2yx = (sum((xi - Yi)^2))/lon
S2yx
(sum((xi*(b-1))^2))
fisher <- ((lon*(y_^2)) + (2*y_)*(b - 1)*(sum((xi*(b-1))^2))*(sum(xi^2)))/(2*S2yx)
fisher
################################### Funciones Univariantes ###########################
for (i in 1:dim(logReales)[2]) {
if(i==1){
ve <- sqrt(sum((Reales[[i]]-Simulados[[i]])^2)/lon)*100/mean(Reales[[i]]) #%RMSE
ve <- cbind(ve, 1 - (sum((Reales[[i]]-Simulados[[i]])^2)/sum((Reales[[i]]-mean(Reales[[i]]))^2)))#NS
ve <- cbind(ve, msep <- (sum((Reales[[i]]-Simulados[[i]])^2))/lon) #MSEP
ve <- cbind(ve, sqrt(msep)) #RMSEP
ve <- cbind(ve, (sum(abs(Reales[[i]] - Simulados[[i]])))/lon) # MAE
ve <- cbind(ve, (sum((abs(Reales$datos.CBM-Simulados$datos.CBMs))/(abs(Reales$datos.CBM))))*(100/120)) %MAE
ve <- cbind(ve, sqrt(sum((Reales[[i]]-Simulados[[i]])^2)/lon) / (sqrt(sum((Reales[[i]])^2)/lon) + sqrt(sum((Simulados[[i]])^2)/lon)))#U
ve <- cbind(ve, (cor(Reales[[i]], Simulados[[i]]))^2);   #r^2
ve <- cbind(ve, pearson <- cor(Reales[[i]], Simulados[[i]])) #pearson
ve <- cbind(ve, MV <- (lon / 2) * (log1p(sum((Reales[[i]]-Simulados[[i]])^2)/lon))) # MV
ve <- cbind(ve, (-2 * MV)+2)#AIC
ve <- cbind(ve,((mean(Reales[[i]])-mean(Simulados[[i]]))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#MC
ve <- cbind(ve,((sd(Simulados[[i]])-(pearson*sd(Reales[[i]])))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#SC
ve <- cbind(ve,((1 - (pearson)^2)*((var(Reales[[i]]))*((lon-1)/lon)))/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#RC
d_ <- (sum(Reales$datos.CBM - Simulados$datos.CBMs)/lon)
ve <- cbind(ve, d_/sqrt((sum(((Reales$datos.CBM-Simulados$datos.CBMs)-d_)^2))/(lon-1))) # t_student
}
else{
ve <- cbind(ve, sqrt(sum((Reales[[i]]-Simulados[[i]])^2)/lon)*100/mean(Reales[[i]]))#%RMSE
ve <- cbind(ve, 1 - (sum((Reales[[i]]-Simulados[[i]])^2)/sum((Reales[[i]]-mean(Reales[[i]]))^2)))#NS
ve <- cbind(ve, msep <- (sum((Reales[[i]]-Simulados[[i]])^2))/lon) #MSEP
ve <- cbind(ve, sqrt(msep)) #RMSEP
ve <- cbind(ve, (sum(abs(Reales[[i]] - Simulados[[i]])))/lon) # MAE
ve <- cbind(ve, (sum((abs(Reales$datos.CBM-Simulados$datos.CBMs))/(abs(Reales$datos.CBM))))*(100/120)) %MAE
ve <- cbind(ve, sqrt(sum((Reales[[i]]-Simulados[[i]])^2)/lon) / (sqrt(sum((Reales[[i]])^2)/lon) + sqrt(sum((Simulados[[i]])^2)/lon)))#U
ve <- cbind(ve, ((cor(Reales[[i]], Simulados[[i]]))^2))#r^2
ve <- cbind(ve, pearson <- cor(Reales[[i]], Simulados[[i]])) #pearson
ve <- cbind(ve, MV <- (lon / 2) * (log1p(sum((Reales[[i]]-Simulados[[i]])^2)/lon))) # MV
ve <- cbind(ve, (-2 * MV)+2)#AIC
ve <- cbind(ve, ((mean(Reales[[i]])-mean(Simulados[[i]]))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#MC
ve <- cbind(ve, ((sd(Simulados[[i]])-(pearson*sd(Reales[[i]])))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#SC
ve <- cbind(ve, ((1 - (pearson)^2)*((var(Reales[[i]]))*((lon-1)/lon)))/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#RC
d_ <- (sum(Reales[[i]] - Simulados[[i]])/lon)
ve <- cbind(ve, d_/sqrt((sum(((Reales[[i]]-Simulados[[i]])-d_)^2))/(lon-1))) # t_student
}
}
table_uni <- data.frame(matrix(ve,nrow=dim(logReales)[2],ncol=15,byrow=T))
colnames(table_uni ) <- c("%RMSE", "NS","MSEP","RMSEP","MAE","%MAE","U","R^2","pearson","MV","AIC","MC","SC","RC","t-student")
table_uni$bayes <-(table_uni$MV/sum(table_uni$MV))
return(table_uni)
}
library(DIMBIO)
Univariantes(Reales,Simulados)
library(DIMBIO)
Univariantes(Reales,Simulados)
lon <- dim(Reales)[1]
n_variable <- dim(Reales)[2]
lon
n_variable
library(DIMBIO)
n_variable
Univariantes(Reales,Simulados)
library(DIMBIO)
Univariantes(Reales,Simulados)
Univariantes <- function(Reales, Simulados){
if(4 == 3){
lon <- dim(Reales)[1]
n_variable <- dim(Reales)[2]
################################### Estadisticos Univariantes ###########################
for (i in 1:n_variable) {
if(i==1){
ve <- sqrt(sum((Reales[[i]] - Simulados[[i]])^2)/lon)*100/mean(Reales[[i]]) #%RMSE
ve <- cbind(ve, 1 - (sum((Reales[[i]] - Simulados[[i]])^2)/sum((Reales[[i]]-mean(Reales[[i]]))^2)))#NS
ve <- cbind(ve, msep <- (sum((Reales[[i]] - Simulados[[i]])^2))/lon) #MSEP
ve <- cbind(ve, sqrt(msep)) #RMSEP
ve <- cbind(ve, (sum(abs(Reales[[i]] - Simulados[[i]])))/lon) # MAE
ve <- cbind(ve, (sum((abs(Reales[[i]] - Simulados[[i]]))/(abs(Reales[[i]]))))*(100/lon))# %MAE
ve <- cbind(ve, sqrt(sum((Reales[[i]] - Simulados[[i]])^2)/lon) / (sqrt(sum((Reales[[i]])^2)/lon) + sqrt(sum((Simulados[[i]])^2)/lon)))#U
ve <- cbind(ve, (cor(Reales[[i]], Simulados[[i]]))^2);   #r^2
ve <- cbind(ve, pearson <- cor(Reales[[i]], Simulados[[i]])) #pearson
ve <- cbind(ve, MV <- (lon / 2) * (log1p(sum((Reales[[i]]-Simulados[[i]])^2)/lon))) # MV
ve <- cbind(ve, (-2 * MV)+2)#AIC
ve <- cbind(ve,((mean(Reales[[i]]) - mean(Simulados[[i]]))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#MC
ve <- cbind(ve,((sd(Simulados[[i]])-(pearson*sd(Reales[[i]])))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#SC
ve <- cbind(ve,((1 - (pearson)^2)*((var(Reales[[i]]))*((lon-1)/lon)))/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#RC
d_ <- (sum(Reales$datos.CBM - Simulados$datos.CBMs)/lon)
ve <- cbind(ve, d_/sqrt((sum(((Reales$datos.CBM-Simulados$datos.CBMs)-d_)^2))/(lon-1))) # t_student
}
else{
ve <- cbind(ve, sqrt(sum((Reales[[i]]-Simulados[[i]])^2)/lon)*100/mean(Reales[[i]]))#%RMSE
ve <- cbind(ve, 1 - (sum((Reales[[i]]-Simulados[[i]])^2)/sum((Reales[[i]]-mean(Reales[[i]]))^2)))#NS
ve <- cbind(ve, msep <- (sum((Reales[[i]]-Simulados[[i]])^2))/lon) #MSEP
ve <- cbind(ve, sqrt(msep)) #RMSEP
ve <- cbind(ve, (sum(abs(Reales[[i]] - Simulados[[i]])))/lon) # MAE
ve <- cbind(ve, (sum((abs(Reales$datos.CBM-Simulados$datos.CBMs))/(abs(Reales$datos.CBM))))*(100/lon))# %MAE
ve <- cbind(ve, sqrt(sum((Reales[[i]]-Simulados[[i]])^2)/lon) / (sqrt(sum((Reales[[i]])^2)/lon) + sqrt(sum((Simulados[[i]])^2)/lon)))#U
ve <- cbind(ve, ((cor(Reales[[i]], Simulados[[i]]))^2))#r^2
ve <- cbind(ve, pearson <- cor(Reales[[i]], Simulados[[i]])) #pearson
ve <- cbind(ve, MV <- (lon / 2) * (log1p(sum((Reales[[i]]-Simulados[[i]])^2)/lon))) # MV
ve <- cbind(ve, (-2 * MV)+2)#AIC
ve <- cbind(ve, ((mean(Reales[[i]])-mean(Simulados[[i]]))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#MC
ve <- cbind(ve, ((sd(Simulados[[i]])-(pearson*sd(Reales[[i]])))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#SC
ve <- cbind(ve, ((1 - (pearson)^2)*((var(Reales[[i]]))*((lon-1)/lon)))/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#RC
d_ <- (sum(Reales[[i]] - Simulados[[i]])/lon)
ve <- cbind(ve, d_/sqrt((sum(((Reales[[i]]-Simulados[[i]])-d_)^2))/(lon-1))) # t_student
}
}
table_uni <- data.frame(matrix(ve,nrow=n_variable,ncol=15,byrow=T))
colnames(table_uni ) <- c("%RMSE", "NS","MSEP","RMSEP","MAE","%MAE","U","R^2","pearson","MV","AIC","MC","SC","RC","t-student")
table_uni$bayes <-(table_uni$MV/sum(table_uni$MV))
return(table_uni)
}else
return("Dimesion de los dataFrame no son Incorrectas")
}
Univariantes <- function(Reales, Simulados){
if(4 == 3){
lon <- dim(Reales)[1]
n_variable <- dim(Reales)[2]
################################### Estadisticos Univariantes ###########################
for (i in 1:n_variable) {
if(i==1){
ve <- sqrt(sum((Reales[[i]] - Simulados[[i]])^2)/lon)*100/mean(Reales[[i]]) #%RMSE
ve <- cbind(ve, 1 - (sum((Reales[[i]] - Simulados[[i]])^2)/sum((Reales[[i]]-mean(Reales[[i]]))^2)))#NS
ve <- cbind(ve, msep <- (sum((Reales[[i]] - Simulados[[i]])^2))/lon) #MSEP
ve <- cbind(ve, sqrt(msep)) #RMSEP
ve <- cbind(ve, (sum(abs(Reales[[i]] - Simulados[[i]])))/lon) # MAE
ve <- cbind(ve, (sum((abs(Reales[[i]] - Simulados[[i]]))/(abs(Reales[[i]]))))*(100/lon))# %MAE
ve <- cbind(ve, sqrt(sum((Reales[[i]] - Simulados[[i]])^2)/lon) / (sqrt(sum((Reales[[i]])^2)/lon) + sqrt(sum((Simulados[[i]])^2)/lon)))#U
ve <- cbind(ve, (cor(Reales[[i]], Simulados[[i]]))^2);   #r^2
ve <- cbind(ve, pearson <- cor(Reales[[i]], Simulados[[i]])) #pearson
ve <- cbind(ve, MV <- (lon / 2) * (log1p(sum((Reales[[i]]-Simulados[[i]])^2)/lon))) # MV
ve <- cbind(ve, (-2 * MV)+2)#AIC
ve <- cbind(ve,((mean(Reales[[i]]) - mean(Simulados[[i]]))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#MC
ve <- cbind(ve,((sd(Simulados[[i]])-(pearson*sd(Reales[[i]])))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#SC
ve <- cbind(ve,((1 - (pearson)^2)*((var(Reales[[i]]))*((lon-1)/lon)))/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#RC
d_ <- (sum(Reales$datos.CBM - Simulados$datos.CBMs)/lon)
ve <- cbind(ve, d_/sqrt((sum(((Reales$datos.CBM-Simulados$datos.CBMs)-d_)^2))/(lon-1))) # t_student
}
else{
ve <- cbind(ve, sqrt(sum((Reales[[i]]-Simulados[[i]])^2)/lon)*100/mean(Reales[[i]]))#%RMSE
ve <- cbind(ve, 1 - (sum((Reales[[i]]-Simulados[[i]])^2)/sum((Reales[[i]]-mean(Reales[[i]]))^2)))#NS
ve <- cbind(ve, msep <- (sum((Reales[[i]]-Simulados[[i]])^2))/lon) #MSEP
ve <- cbind(ve, sqrt(msep)) #RMSEP
ve <- cbind(ve, (sum(abs(Reales[[i]] - Simulados[[i]])))/lon) # MAE
ve <- cbind(ve, (sum((abs(Reales$datos.CBM-Simulados$datos.CBMs))/(abs(Reales$datos.CBM))))*(100/lon))# %MAE
ve <- cbind(ve, sqrt(sum((Reales[[i]]-Simulados[[i]])^2)/lon) / (sqrt(sum((Reales[[i]])^2)/lon) + sqrt(sum((Simulados[[i]])^2)/lon)))#U
ve <- cbind(ve, ((cor(Reales[[i]], Simulados[[i]]))^2))#r^2
ve <- cbind(ve, pearson <- cor(Reales[[i]], Simulados[[i]])) #pearson
ve <- cbind(ve, MV <- (lon / 2) * (log1p(sum((Reales[[i]]-Simulados[[i]])^2)/lon))) # MV
ve <- cbind(ve, (-2 * MV)+2)#AIC
ve <- cbind(ve, ((mean(Reales[[i]])-mean(Simulados[[i]]))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#MC
ve <- cbind(ve, ((sd(Simulados[[i]])-(pearson*sd(Reales[[i]])))^2)/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#SC
ve <- cbind(ve, ((1 - (pearson)^2)*((var(Reales[[i]]))*((lon-1)/lon)))/(sum((Reales[[i]]-Simulados[[i]])^2)/lon))#RC
d_ <- (sum(Reales[[i]] - Simulados[[i]])/lon)
ve <- cbind(ve, d_/sqrt((sum(((Reales[[i]]-Simulados[[i]])-d_)^2))/(lon-1))) # t_student
}
}
table_uni <- data.frame(matrix(ve,nrow=n_variable,ncol=15,byrow=T))
colnames(table_uni ) <- c("%RMSE", "NS","MSEP","RMSEP","MAE","%MAE","U","R^2","pearson","MV","AIC","MC","SC","RC","t-student")
table_uni$bayes <-(table_uni$MV/sum(table_uni$MV))
return(table_uni)
}else
return("Dimesion de los dataFrame no son Incorrectas")
}
erxir
cls
library(DIMBIO)
Univariantes(Reales,Simulados)
help(colnames)
library(DIMBIO)
Univariantes(Reales,Simulados)
library(DIMBIO)
Univariantes(Reales,Simulados)
library(DIMBIO)
library(DIMBIO)
Univariantes(Reales,Simulados)
library(DIMBIO)
Univariantes(Reales,Simulados)
library(DIMBIO)
Univariantes(Reales,Simulados)
library(DIMBIO)
Univariantes(Reales,Simulados)
Univariantes(Reales,Simulados)
library(DIMBIO)
Univariantes(Reales,Simulados)
#Cargar datos
datos <- read.table("C:/Users/Ronny/Documents/tesis/ejecucion/Datos.txt",header=TRUE)
#datosFisher
#Datos Reales
Reales <- data.frame(datos$CBM, datos$NBM, datos$ResAcum, datos$Nmin)
#Reales
#Datos Simulados
Simulados <- data.frame(datos$CBMs, datos$NBMs, datos$ResAcums, datos$Nmins)
#Simulados
#Log de Reales
logReales <- log10(Reales)
#logReales
#Log de Simulados
logSimulados <- log10(Simulados)
#logSimulados
Univariantes(Reales, Simulados)
library(DIMBIO)
Univariantes(Reales, Simulados)
Univariantes(Reales, Simulados)
library(DIMBIO)
library(DIMBIO)
Univariantes(Reales, Simulados)
library(DIMBIO)
Univariantes(Reales, Simulados)
nombre_variable <- c("Var 1", "Var 2", "Var 3", "Var 4")
nombre_variable <- c("Var A", "Var B", "Var C", "Var D")
nombre_variable
library(DIMBIO)
Univariantes(Reales, Simulados)
Univariantes(Reales, Simulados,nombre_variable)
library(DIMBIO)
Univariantes(Reales, Simulados)
library(DIMBIO)
Univariantes(Reales, Simulados)
Univariantes(Reales, Simulados)
library(DIMBIO)
library(DIMBIO)
Univariantes(Reales, Simulados)
Univariantes(Reales, Simulados, nombre_variable)
View(Reales)
nombre_variable <- c("CBM", "NBM", "ResAcum", "Nmin")
Univariantes(Reales, Simulados, nombre_variable)
dim(nombre_variable)
length(nombre_variable)
return("Vector de nombre debe ser igual al numero de variables")
Univariantes(Reales, Simulados, nombre_variable)
Univariantes(Reales, Simulados)
Univariantes(Reales, Simulados)
Univariantes(Reales, Simulados)
